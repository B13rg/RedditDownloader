name: Build Release Binaries

on:
  release:
    types: [published]


jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      max-parallel: 3
      matrix:
        os: [windows, ubuntu, macOS]
        include:
          - os: windows
            artifact: RedditDownloader.exe
            path: ./dist/RedditDownloader.exe
          - os: ubuntu
            artifact: RedditDownloader-ubuntu
            path: ./dist/RedditDownloader
          - os: macOS
            artifact: RedditDownloader-macOS
            path: ./dist/RedditDownloader
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Requirements
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller build-rmd.spec

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@1.0.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.path }}
          overwrite: true
          asset_name: ${{ matrix.artifact }}
          tag: ${{ github.ref }}

  update:  # Skipped on Pre-release.
    name: Update the version information branch.
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v1
      - name: Build metadata
        env:
          RELEASE_VERSION: ${{ github.ref }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout --track origin/release-information || git checkout --orphan release-information
          git rm -rf .
          tag="$RELEASE_VERSION"
          tag=${tag##*/}
          echo "{\"latest_release\":\"${tag}\", \"update_time\":$(date +%s)}" > data.json
          git add --all
          git commit -m "Automatically update the latest release version" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          branch: release-information
